// Generated by scripts/generate-types.js
// Do not edit this file manually


// Generated paths and localization info
export const CONTENTRAIN_PATHS = {
  root: 'contentrain',
  models: 'contentrain/models',
  metadata: 'contentrain/models/metadata.json'
} as const

export const CONTENTRAIN_LOCALES = {
  "error-messages": [
    "en",
    "tr"
  ],
  "ui-elements": [
    "en",
    "tr"
  ]
} as const

export type LocalizedModels = keyof typeof CONTENTRAIN_LOCALES
export type ModelLocales<T extends LocalizedModels> = typeof CONTENTRAIN_LOCALES[T][number]


// Metadata types
export interface ContentrainModelMetadata {
  name: string
  modelId: ModelId
  localization: boolean
  type: 'JSON' | 'MD' | 'MDX'
  createdBy: string
  isServerless: boolean
}

export type ContentrainMetadata = ContentrainModelMetadata[]


// Field Types
export type ContentrainDataType = 'string' | 'number' | 'boolean' | 'array' | 'date' | 'media' | 'relation'

// Runtime value types
export type ContentrainValueType<T extends ContentrainDataType, C extends ContentrainComponentId> =
  T extends 'date' ? string :  // ISO date string
  T extends 'number' ? number :
  T extends 'boolean' ? boolean :
  T extends 'array' ? string[] :  // veya component'e g√∂re array type
  T extends 'media' ? string :    // URL/path
  T extends 'relation' ? 
    C extends 'one-to-one' ? string :
    C extends 'one-to-many' ? string[] :
    never :
  string

export type ContentrainComponentId = 
  | 'single-line-text' | 'multi-line-text' | 'email' | 'url' | 'slug' | 'color' | 'json' | 'md-editor' | 'rich-text-editor'  // string
  | 'integer' | 'decimal' | 'rating' | 'percent' | 'phone-number'  // number
  | 'checkbox' | 'switch'  // boolean
  | 'date' | 'date-time'  // date
  | 'media'  // media
  | 'one-to-one' | 'one-to-many'  // relation

export interface ContentrainValidation {
  'required-field'?: {
    value: boolean
  }
  'unique-field'?: {
    value: boolean
  }
  'input-range-field'?: {
    value: boolean
    form: {
      'number-of-stars': {
        component: 'integer'
        value: string
        props: {
          min: number
          max: number
        }
      }
    }
  }
}

export interface ContentrainFieldOptions {
  'title-field'?: {
    value: boolean
  }
  'default-value'?: {
    value: boolean
    form?: {
      'default-value': {
        component: 'default-value'
        value: string
      }
    }
  }
  'number-of-stars'?: {
    value: boolean
    form: {
      'number-of-stars': {
        component: 'integer'
        value: string
        props: {
          min: number
          max: number
        }
      }
    }
  }
  'reference'?: {
    value: boolean
    form: {
      reference: {
        props: {
          options: any[]
        }
        component: 'single-select'
        value: string
      }
    }
  }
}

export interface ContentrainModelField {
  fieldId: string
  fieldType: ContentrainDataType
  componentId: ContentrainComponentId
  validations?: ContentrainValidation
  options?: ContentrainFieldOptions
}

export type ContentrainModel = ContentrainModelField[]


// Filter operator enum for runtime mapping
export enum FilterOperator {
  Equals = 'eq',
  NotEquals = 'neq',
  GreaterThan = 'gt',
  GreaterThanOrEqual = 'gte',
  LessThan = 'lt',
  LessThanOrEqual = 'lte',
  Contains = 'contains',
  In = 'in',
  NotIn = 'nin'
}

export type Status = 'draft' | 'changed' | 'publish'
export type SortDirection = 'asc' | 'desc'
export type RelationType = 'one-to-one' | 'one-to-many'

export interface BaseContentrainType {
  ID: string
  createdAt: string
  updatedAt: string
  status: Status
}

export type ModelId = 'error-messages' | 'ui-elements'

export interface IErrorMessages extends BaseContentrainType {
  code: number
  title: string
  message: string
}

export interface IUIElements extends BaseContentrainType {
  section: string
  key: string
  value: string
}

// Type mapping for model IDs to their respective interfaces
export type ContentrainTypeMap = {
  'error-messages': IErrorMessages
  'ui-elements': IUIElements
}

// Relation Mappings

export type ModelRelations = {
  'error-messages': {
  }
  'ui-elements': {
  }
}
