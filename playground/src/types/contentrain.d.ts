// Generated by @contentrain/sdk
import type { IBaseModel } from '@contentrain/sdk'

export interface IBlogPosts extends IBaseModel {
  title: string
  content: string
  slug: string
  categoryId?: string
  categoryIdData?: IBlogCategories
}

export interface IPostAuthors extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  fullname: string
  avatarImage?: any
  role?: string
}

export interface IBlogCategories extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  name: string
  description?: string
  subCategories?: string[]
  subCategoriesData?: IBlogCategories[]
  tip?: string
}

export interface IBitkiBilgiBankasi extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  title: string
  description?: string
  slug: string
  content: string
  image: any
  author?: string
  authorData?: IPostAuthors
}

export interface IFaq extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  title: string
  content: string
  description: string
}

export interface ISeoLinks extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  text: string
  link: string
}

export interface IBannerItems extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  order: number
  image?: any
  imageSource?: string
  link: string
  imageAlt?: string
  items?: string[]
  itemsData?: IBannerItems[]
  promotionId?: string
  promotionName?: string
  creativeName?: string
  creativeSlot?: string
  locationId?: string
}

export interface IBannerItems1 extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  order: number
  items?: string[]
  itemsData?: IBannerItems[]
}

export interface ICampaigns extends IBaseModel {
  slug: string
  content: string
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  title: string
  description?: string
  image?: any
  imageAlt?: string
  imageSource?: string
  campaignCardText: string
  buttonText: string
}

export interface IPages extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  heading?: string
  image?: any
  imageSrc?: string
  imageAlt?: string
  content?: string
  slug: string
  metaTags?: string[]
  metaTagsData?: IMetaTags[]
  breadcrumbBannerImage?: any
}

export interface ISozlesmelerVeKvkk extends IBaseModel {
  slug: string
  content: string
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  type: string
  title: string
}

export interface IDestekSorular extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  title: string
  soruCevap: string[]
  soruCevapData?: IDestekSoru[]
  order: number
}

export interface IDestekSoru extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  soru: string
  cevap: string
  title: string
  order?: number
}

export interface IUserpanelemptystate extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  icon: string
  title: string
  buttontext: string
  panelId: string
  buttonlink?: string
}

export interface ISeo extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  pagename?: string
}

export interface IFormField extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  label?: string
  placeholder?: string
  options?: string[]
}

export interface IForm extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  formFields: string[]
  formFieldsData?: IFormField[]
  formSourceUrl: string
  formTitle?: string
  formSubtitle?: string
  formSubmitText?: string
}

export interface IMetaTags extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  name: string
  content: string
  description?: string
}

export interface IOrderNote extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  category: string
  messages: string[]
}

export interface IHeaderTopBar extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  title?: string
  link?: string
  imageSrc?: string
  imageAlt?: string
  image?: any
}

export interface IBenefitsBanner extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  title?: string
  imageSource?: string
  imageAlt?: string
  image?: any
}

export interface INewsletterBanner extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  title?: string
  description?: string
  image?: any
}

export interface IProductBanner extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  text?: string
  icon?: string
}

export interface IBrands extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  guid: string
  description?: string
  logo?: any
  title: string
}

export interface IShippingDetails extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  guid: string
  content: string
  subCategory: string
  image?: any
}

export interface IFeaturedProduct extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  title: string
  imageAlt?: string
  submitText?: string
  friendlyurl: string
  image: string
  kategoriFriendlyUrl?: string
}

export interface IConnectionBar extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  featuredProducts?: string[]
  featuredProductsData?: IFeaturedProduct[]
  greeting?: string
}

export interface IMenuCategory extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  title: string
  friendlyUrl: string
  guid: string
}

export interface IFooterMenus extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  title?: string
  justify?: string
  flex?: string
  items?: string[]
  itemsData?: IFooterItem[]
  order?: number
}

export interface IFooterItem extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  order: number
  type?: string
  text?: string
  src?: string
  link?: string
  alt?: string
  icon?: string
  items?: string[]
  itemsData?: IFooterItem[]
  flex?: string
  image?: any
  justify?: string
}

export interface ILogo extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  image?: any
  imageSrc?: string
  imageAlt?: string
  order: number
}

export interface ISocialMedia extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  content: string[]
  contentData?: IFooterItem[]
}

export interface IFooterBottomItems extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  text?: string
  flex?: string
  justify?: string
  items?: string[]
  itemsData?: IFooterItem[]
  order: number
}

export interface ILocationModal extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  text: string
  placeholder?: string
  image?: any
  imageSrc?: string
  imageAlt?: string
  footerText?: string
}

export interface IPaymentOptionsBanner extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  title?: string
  logos: string[]
  logosData?: ILogo[]
}

export interface IHeaderLogo extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  type: string
  imageAlt?: string
  imageSrc?: string
  image?: any
}

export interface IFooterMenus1 extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  title?: string
  justify?: string
  flex?: string
  items?: string[]
  itemsData?: IFooterItem[]
  order?: number
}

export interface IShowcaseViewStyle extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  sliderView?: boolean
}

export interface ICorporateSections extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  title: string
  description: string
  buttontext?: string
  buttonlink?: string
  name: string
  image?: any
  imageSource?: string
  imageAlt?: string
  items?: string[]
  itemsData?: ICorporateSectionItems[]
}

export interface ICorporateSectionItems extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  text?: string
  name?: string
  image?: any
  imageAlt?: string
  icon?: string[]
  iconData?: ICorporateItemIcons[]
  link?: string
  order: number
}

export interface ICorporateItemIcons extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  iconThemeName: string
  iconName: string
  iconColor?: string
  iconBackgroundColor?: string
}

export interface ICorporateBannerCards extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  title: string
  description: string
  icon?: string
  iconData?: ICorporateItemIcons
}

export interface ICorporateFaqs extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  question: string
  answer: string
  order: number
}

export interface IStickyButtonThemes extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  backgroundColor?: string
  activeBackgroundColor?: string
  textColor?: string
  activeTextColor?: string
  borderColor?: string
  activeBorderColor?: string
  iconColor?: string
  activeIconColor?: string
  name?: string
}

export interface ISpecialDays extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  date?: any
  name?: string
  theme?: string
  themeData?: IStickyButtonThemes
  icon?: string
  activeIcon?: string
}

export interface ICustomMenu extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  title?: string
  titleBold?: any
  titleItalic?: any
  titleIcon?: string
  items?: string[]
  itemsData?: ICustomMenuItems[]
  seeAllUrl?: string
  image?: any
  imageAlt?: string
  link?: string
  order?: number
}

export interface ICustomMenuItems extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  text?: string
  image?: any
  imageAlt?: string
  link?: string
}

export interface IFormField1 extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  name: string
  type: string
  typeData?: IFieldTypes
  label?: string
  labelData?: ILabels
  placeholder?: string
  placeholderData?: IPlaceholders
  options?: string[]
  optionsData?: IOptions[]
  autocomplete?: string
  autocompleteData?: IAutocompleteTypes
}

export interface IFieldTypes extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  text: string
  value: string
}

export interface ILabels extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  text: string
}

export interface IPlaceholders extends IBaseModel {
  text: string
}

export interface IOptions extends IBaseModel {
  text: string
  value: string
  group: string
}

export interface IAutocompleteTypes extends IBaseModel {
  createdAt: any
  updatedAt: any
  ID: string
  status: string
  name: string
  value: string
}

export interface ContentrainTypeMap {
  [key: string]: IBaseModel
  'blog-posts': IBlogPosts
  'post-authors': IPostAuthors
  'blog-categories': IBlogCategories
  'bitki-bilgi-bankasi': IBitkiBilgiBankasi
  'faq': IFaq
  'seo-links': ISeoLinks
  'banner-items': IBannerItems
  'banner-items-1': IBannerItems1
  'campaigns': ICampaigns
  'pages': IPages
  'sozlesmeler-ve-kvkk': ISozlesmelerVeKvkk
  'destek-sorular': IDestekSorular
  'destek-soru': IDestekSoru
  'userpanelemptystate': IUserpanelemptystate
  'seo': ISeo
  'form-field': IFormField
  'form': IForm
  'meta-tags': IMetaTags
  'order-note': IOrderNote
  'header-top-bar': IHeaderTopBar
  'benefits-banner': IBenefitsBanner
  'newsletter-banner': INewsletterBanner
  'product-banner': IProductBanner
  'brands': IBrands
  'shipping-details': IShippingDetails
  'featured-product': IFeaturedProduct
  'connection-bar': IConnectionBar
  'menu-category': IMenuCategory
  'footer-menus': IFooterMenus
  'footer-item': IFooterItem
  'logo': ILogo
  'social-media': ISocialMedia
  'footer-bottom-items': IFooterBottomItems
  'location-modal': ILocationModal
  'payment-options-banner': IPaymentOptionsBanner
  'header-logo': IHeaderLogo
  'footer-menus-1': IFooterMenus1
  'showcase-view-style': IShowcaseViewStyle
  'corporate-sections': ICorporateSections
  'corporate-section-items': ICorporateSectionItems
  'corporate-item-icons': ICorporateItemIcons
  'corporate-banner-cards': ICorporateBannerCards
  'corporate-faqs': ICorporateFaqs
  'sticky-button-themes': IStickyButtonThemes
  'special-days': ISpecialDays
  'custom-menu': ICustomMenu
  'custom-menu-items': ICustomMenuItems
  'form-field-1': IFormField1
  'field-types': IFieldTypes
  'labels': ILabels
  'placeholders': IPlaceholders
  'options': IOptions
  'autocomplete-types': IAutocompleteTypes
}

export type ModelId = keyof ContentrainTypeMap